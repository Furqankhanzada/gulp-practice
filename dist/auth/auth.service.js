"use strict";function isAuthenticated(){return compose().use(function(e,s,o){e.query&&e.query.hasOwnProperty("access_token")&&(e.headers.authorization="Bearer "+e.query.access_token),validateJwt(e,s,o)}).use(function(e,s,o){User.findById(e.user._id,function(r,n){return r?o(r):n?(e.user=n,void o()):s.send(401)})})}function hasRole(e){if(!e)throw new Error("Required role needs to be set");return compose().use(isAuthenticated()).use(function(s,o,r){config.userRoles.indexOf(s.user.role)>=config.userRoles.indexOf(e)?r():o.send(403)})}function signToken(e){return jwt.sign({_id:e},config.secrets.session,{expiresInMinutes:300})}function setTokenCookie(e,s){if(!e.user)return s.json(404,{message:"Something went wrong, please try again."});var o=signToken(e.user._id,e.user.role);s.cookie("token",JSON.stringify(o)),s.redirect("/")}var mongoose=require("mongoose"),passport=require("passport"),config=require("../config/environment"),jwt=require("jsonwebtoken"),expressJwt=require("express-jwt"),compose=require("composable-middleware"),User=require("../api/user/user.model"),validateJwt=expressJwt({secret:config.secrets.session});exports.isAuthenticated=isAuthenticated,exports.hasRole=hasRole,exports.signToken=signToken,exports.setTokenCookie=setTokenCookie;